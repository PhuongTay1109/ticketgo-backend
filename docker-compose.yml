version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: ticketgo-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: PhuongTay110903@
      MYSQL_DATABASE: ticketgo_db
      TZ: Asia/Ho_Chi_Minh
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./ticketgo.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - spring-ticketgo-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10

  redis:
    image: redis:latest
    container_name: ticketgo-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--appendonly", "no", "--slaveof", "no", "one" ]
    networks:
      - spring-ticketgo-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ticketgo-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"     # AMQP
      - "15672:15672"   # Web UI
      - "61613:61613"   # STOMP
    command: >
      sh -c "rabbitmq-plugins enable --offline rabbitmq_stomp &&
             rabbitmq-server"
    networks:
      - spring-ticketgo-network
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ticketgo-backend
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: real
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/ticketgo_db?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: PhuongTay110903@
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_REDIS_HOST: redis
    ports:
      - "8080:8080"
      - "8888:8888"
    volumes:
      - ./src/main/resources:/app/config
    networks:
      - spring-ticketgo-network
volumes:
  mysql_data:
  redis-data:


networks:
   spring-ticketgo-network:
        driver: bridge